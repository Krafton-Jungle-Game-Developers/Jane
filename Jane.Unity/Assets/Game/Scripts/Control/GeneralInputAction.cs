//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.4.4
//     from Assets/Game/Scripts/Control/GeneralInputAction.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @GeneralInputAction : IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @GeneralInputAction()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""GeneralInputAction"",
    ""maps"": [
        {
            ""name"": ""General Controls"",
            ""id"": ""f4f18d6a-65de-45e1-bf60-add2832364ea"",
            ""actions"": [
                {
                    ""name"": ""Pause Menu"",
                    ""type"": ""Button"",
                    ""id"": ""d7afcfbc-8dd2-4d9d-8d89-3dd813f01f65"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Mouse Position"",
                    ""type"": ""Value"",
                    ""id"": ""c7003abe-0c4c-4045-b497-d7428d40099f"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Mouse Delta"",
                    ""type"": ""Value"",
                    ""id"": ""e0a1e2ef-d142-4224-ad49-0cb0da8dc41f"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Throttle"",
                    ""type"": ""Value"",
                    ""id"": ""e44d91dd-4e5a-4564-8b75-030adca655d4"",
                    ""expectedControlType"": ""Analog"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Fire Primary"",
                    ""type"": ""Button"",
                    ""id"": ""b376c48c-6304-4a8c-9ad9-c1d2310ef6ee"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""9d65d618-5d23-478a-91d5-56e0cdc84d69"",
                    ""path"": ""<Keyboard>/escape"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Pause Menu"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""f0b1ea50-2195-488e-b1f2-719a3698dc1b"",
                    ""path"": ""<Mouse>/position"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Mouse Position"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""9daac7d0-3c70-439f-823e-74ede01c6245"",
                    ""path"": ""<Mouse>/delta"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Mouse Delta"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""5c9c4a55-55d7-4f0f-8e44-91373d67e731"",
                    ""path"": ""<Mouse>/leftButton"",
                    ""interactions"": ""Press"",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Fire Primary"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": []
}");
        // General Controls
        m_GeneralControls = asset.FindActionMap("General Controls", throwIfNotFound: true);
        m_GeneralControls_PauseMenu = m_GeneralControls.FindAction("Pause Menu", throwIfNotFound: true);
        m_GeneralControls_MousePosition = m_GeneralControls.FindAction("Mouse Position", throwIfNotFound: true);
        m_GeneralControls_MouseDelta = m_GeneralControls.FindAction("Mouse Delta", throwIfNotFound: true);
        m_GeneralControls_Throttle = m_GeneralControls.FindAction("Throttle", throwIfNotFound: true);
        m_GeneralControls_FirePrimary = m_GeneralControls.FindAction("Fire Primary", throwIfNotFound: true);
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }
    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }
    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // General Controls
    private readonly InputActionMap m_GeneralControls;
    private IGeneralControlsActions m_GeneralControlsActionsCallbackInterface;
    private readonly InputAction m_GeneralControls_PauseMenu;
    private readonly InputAction m_GeneralControls_MousePosition;
    private readonly InputAction m_GeneralControls_MouseDelta;
    private readonly InputAction m_GeneralControls_Throttle;
    private readonly InputAction m_GeneralControls_FirePrimary;
    public struct GeneralControlsActions
    {
        private @GeneralInputAction m_Wrapper;
        public GeneralControlsActions(@GeneralInputAction wrapper) { m_Wrapper = wrapper; }
        public InputAction @PauseMenu => m_Wrapper.m_GeneralControls_PauseMenu;
        public InputAction @MousePosition => m_Wrapper.m_GeneralControls_MousePosition;
        public InputAction @MouseDelta => m_Wrapper.m_GeneralControls_MouseDelta;
        public InputAction @Throttle => m_Wrapper.m_GeneralControls_Throttle;
        public InputAction @FirePrimary => m_Wrapper.m_GeneralControls_FirePrimary;
        public InputActionMap Get() { return m_Wrapper.m_GeneralControls; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(GeneralControlsActions set) { return set.Get(); }
        public void SetCallbacks(IGeneralControlsActions instance)
        {
            if (m_Wrapper.m_GeneralControlsActionsCallbackInterface != null)
            {
                @PauseMenu.started -= m_Wrapper.m_GeneralControlsActionsCallbackInterface.OnPauseMenu;
                @PauseMenu.performed -= m_Wrapper.m_GeneralControlsActionsCallbackInterface.OnPauseMenu;
                @PauseMenu.canceled -= m_Wrapper.m_GeneralControlsActionsCallbackInterface.OnPauseMenu;
                @MousePosition.started -= m_Wrapper.m_GeneralControlsActionsCallbackInterface.OnMousePosition;
                @MousePosition.performed -= m_Wrapper.m_GeneralControlsActionsCallbackInterface.OnMousePosition;
                @MousePosition.canceled -= m_Wrapper.m_GeneralControlsActionsCallbackInterface.OnMousePosition;
                @MouseDelta.started -= m_Wrapper.m_GeneralControlsActionsCallbackInterface.OnMouseDelta;
                @MouseDelta.performed -= m_Wrapper.m_GeneralControlsActionsCallbackInterface.OnMouseDelta;
                @MouseDelta.canceled -= m_Wrapper.m_GeneralControlsActionsCallbackInterface.OnMouseDelta;
                @Throttle.started -= m_Wrapper.m_GeneralControlsActionsCallbackInterface.OnThrottle;
                @Throttle.performed -= m_Wrapper.m_GeneralControlsActionsCallbackInterface.OnThrottle;
                @Throttle.canceled -= m_Wrapper.m_GeneralControlsActionsCallbackInterface.OnThrottle;
                @FirePrimary.started -= m_Wrapper.m_GeneralControlsActionsCallbackInterface.OnFirePrimary;
                @FirePrimary.performed -= m_Wrapper.m_GeneralControlsActionsCallbackInterface.OnFirePrimary;
                @FirePrimary.canceled -= m_Wrapper.m_GeneralControlsActionsCallbackInterface.OnFirePrimary;
            }
            m_Wrapper.m_GeneralControlsActionsCallbackInterface = instance;
            if (instance != null)
            {
                @PauseMenu.started += instance.OnPauseMenu;
                @PauseMenu.performed += instance.OnPauseMenu;
                @PauseMenu.canceled += instance.OnPauseMenu;
                @MousePosition.started += instance.OnMousePosition;
                @MousePosition.performed += instance.OnMousePosition;
                @MousePosition.canceled += instance.OnMousePosition;
                @MouseDelta.started += instance.OnMouseDelta;
                @MouseDelta.performed += instance.OnMouseDelta;
                @MouseDelta.canceled += instance.OnMouseDelta;
                @Throttle.started += instance.OnThrottle;
                @Throttle.performed += instance.OnThrottle;
                @Throttle.canceled += instance.OnThrottle;
                @FirePrimary.started += instance.OnFirePrimary;
                @FirePrimary.performed += instance.OnFirePrimary;
                @FirePrimary.canceled += instance.OnFirePrimary;
            }
        }
    }
    public GeneralControlsActions @GeneralControls => new GeneralControlsActions(this);
    public interface IGeneralControlsActions
    {
        void OnPauseMenu(InputAction.CallbackContext context);
        void OnMousePosition(InputAction.CallbackContext context);
        void OnMouseDelta(InputAction.CallbackContext context);
        void OnThrottle(InputAction.CallbackContext context);
        void OnFirePrimary(InputAction.CallbackContext context);
    }
}
